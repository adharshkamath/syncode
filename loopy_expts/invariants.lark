STRING: /"([^"\\]|\\.)*"/                                    -> string

INTEGER: /[0-9]+/                                              -> integer

REAL: /[0-9]+\.[0-9]+/                                         -> real

CHAR: /'([^'\\]|\\.)'/                                        -> char

TRUE: "\true"                                                  -> true

FALSE: "\false"                                                -> false

IDENTIFIER: /[a-zA-Z_][a-zA-Z0-9_]*/                           -> identifier

unary_logic_op: "~" 

bin_logic_op: "&&" | "||" | "=>" | "<=>" 

rel_arith_op: "==" | "!=" | "<" | "<=" | ">" | ">="

unary_arith_op: "-"

binary_arith_op: "+" | "-" | "*" | "/" | "%" | "^"

expr: INTEGER 
    | REAL 
    | CHAR 
    | STRING 
    | IDENTIFIER 
    | IDENTIFIER "(" expr ("," expr)* ")"
    | "(" expr ")" 
    | unary_arith_op expr 
    | expr bin_arith_op expr 
    | expr "?" expr ":" expr

pred: TRUE 
    | FALSE 
    | "(" pred ")" 
    | unary_logic_op pred 
    | pred bin_logic_op pred 
    | expr rel_arith_op expr

invariant: "loop invariant " pred ";"

invariants: invariant*

start: "/*@" invariants "*/"

WS: /[ \t\n]+/
%ignore WS
